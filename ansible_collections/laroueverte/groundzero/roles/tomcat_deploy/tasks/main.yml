---

#################################
# Role to deploy a package into remote tomcat 

#################################
# Depends from roles :  
# - 
 
#################################
# Parameters : 
# - tomcat_deploy_name 				The name of the deployment, will ONLY be used for storing the deployment (the target context is ROOT /)
# - ci_base_url 					The URL of the folder where is located the WAR 
# - delivery_war_name				The name of the war file (full url = ${ci_base_url}${delivery_war_name}
# - tomcat_deploy_action			The action to perform. Can be following : 
#										- prepare 			: Fetch the delivery, unwar into a folder
#										- deploy  			: Deploy the delivery into the tomcat
#										- clean_deployments	: Clen all deployments (keeps 10 most recent)
# - tomcat_deploy_instancenum		The number of instance to deploy / prepare
# - tomcat_baseurl					The hostname of the war being deployed (eg: mycompany.net)
# - tomcat_deploy_smoketest_skip	If defined and set to true, smoke tests are skipped
#################################
# Examples : 
#
#    - {role: tomcat_deploy, tomcat_deploy_action: "prepare", tomcat_deploy_instancenum: 0}
#    - {role: tomcat_deploy, tomcat_deploy_action: "deploy", tomcat_deploy_instancenum: 0}
#    - {role: tomcat_deploy, tomcat_deploy_action: "clean_deployments"}

- name: Prepare tomcat deployment
  include_tasks: tomcat_prepare.yml 
    tomcat_name={{tomcat_deploy_name}} 
    delivery_base_url={{ci_base_url}}
    war_name={{delivery_war_name}} 
  when: tomcat_deploy_action=='prepare'

- name: Deploy to tomcat {{tomcat_deploy_instancenum}}
  include_tasks: tomcat_deploy.yml tomcat_instance={{tomcat_deploy_instancenum}} tomcat_name={{tomcat_deploy_name}}
  when: tomcat_deploy_action=='deploy' 
  
- name: Smoke test tomcat {{tomcat_deploy_instancenum}}
  local_action: shell {{tomcat_deploy_smoketest_command}} {{tomcat_deploy_smoketest_environment}} {{tomcat_deploy_instancenum}} {{tomcat_deploy_smoketest_phonenumber}} {{tomcat_deploy_smoketest_password}} {{tomcat_build_number}} {{(tomcat_deploy_smoketest_server_instance is defined) | ternary(tomcat_deploy_smoketest_server_instance, '')}} 
  when: (tomcat_deploy_smoketest_skip is not defined or tomcat_deploy_smoketest_skip == false) and tomcat_deploy_smoketest_command is defined and tomcat_deploy_action=='deploy'
  
- name: Smoke router tomcat {{tomcat_deploy_instancenum}}
  local_action: shell {{tomcat_deploy_smoketest_router_command}} {{inventory_hostname}} {{tomcat_deploy_instancenum}} {{ tomcat_deploy_smoketest_router_line_opened }}
  when: (tomcat_deploy_smoketest_skip is not defined or tomcat_deploy_smoketest_skip == false) and tomcat_deploy_smoketest_router_command is defined and tomcat_deploy_action=='deploy'

- name: Ensure home page is deployed
  shell: 
    cmd: wget --no-check-certificate --spider --server-response --quiet "https://{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}/" --header "Host:{{tomcat_baseurl}}" --header "Cookie:jsessionid=switch.tomcat{tomcat_deploy_instancenum}" 2>&1 | grep "HTTP/1.1 200" | wc -l
    warn: false
  register: homepage
  when: tomcat_deploy_action=='deploy'
  
- fail: msg="Homepage is not deployed"
  when: tomcat_deploy_action=='deploy' and not homepage.stdout_lines[0] == '1'
  
- name: Ensure test URLs are not deployed
  shell: 
    cmd: wget --no-check-certificate --spider --server-response --quiet "https://{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}/testing/get-sent-email.html?recipientEmail=toto" --header "Host:{{tomcat_baseurl}}" --header "Cookie:jsessionid=switch.tomcat{tomcat_deploy_instancenum}" 2>&1 | grep "HTTP/1.1 200" | wc -l
    warn: false
  register: testingsentemail
  when: tomcat_deploy_action=='deploy'
  
- fail: msg="Testing pages are deployed !"
  when: tomcat_deploy_action=='deploy' and testingsentemail.stdout_lines[0] == '1'
  
- name: Rollback tomcat N
  include_tasks: tomcat_rollback.yml tomcat_instance={{tomcat_deploy_instancenum}} tomcat_name={{tomcat_deploy_name}}
  when: tomcat_deploy_action=='rollback' 
  
- name: Clean tomcat deployment folders
  include_tasks: tomcat_clean_deployments.yml
  when: tomcat_deploy_action=='clean_deployments'